{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"cartographic modeling","text":"<p>A collection of concepts and workflows that apply cartographic modeling to landscape with methods for Google Earth Engine and Whitebox Tools Open Core.      </p> <p>Jeff Howarth Geography Department Middlebury College</p>"},{"location":"change-concepts/","title":"change concepts","text":"<p>The purpose of planning is to inform and influence changes on the land. As such, planning with maps relies on cartographic models for representing spatial change.  </p>"},{"location":"change-concepts/#evolution-of-a-single-entity","title":"evolution of a single entity","text":""},{"location":"change-concepts/#basic-changes","title":"basic changes","text":"<p>appearance, disappearance, stability  </p>"},{"location":"change-concepts/#transformations","title":"transformations","text":"<p>expansion, contraction, deformation   </p>"},{"location":"change-concepts/#movements","title":"movements","text":"<p>translation, rotation  </p>"},{"location":"change-concepts/#processes","title":"processes","text":""},{"location":"change-concepts/#replacement","title":"replacement","text":"<p>succession, permutation  </p>"},{"location":"change-concepts/#diffusion","title":"diffusion","text":"<p>production, reproduction,  transmission  </p>"},{"location":"change-concepts/#restructuring","title":"restructuring","text":"<p>split, union, re-allocation  </p>"},{"location":"data-models/","title":"data models","text":"<p>Geographical data models are frameworks for storing geographic data within the constraints of computer architectures. They are general templates. Some are specific to individual software platforms, while others are shared across packages and follow general conventions or standards.  </p>"},{"location":"data-models/#cartographic-model","title":"cartographic model","text":"<p>Tomlin (1990/2012)      </p>"},{"location":"data-models/#layer","title":"layer","text":"<p>title, metadata, zone(s)  </p>"},{"location":"data-models/#zone","title":"zone","text":"<p>label, value, location  </p>"},{"location":"data-models/#value","title":"value","text":"<p>nominal, ordinal, interval, ratio, cyclical, null</p>"},{"location":"data-models/#location","title":"location","text":"<p>a finite portion of the plane; grid, cell, resolution  </p>"},{"location":"data-models/#neighborhood","title":"neighborhood","text":"<p>focus, distance  </p>"},{"location":"data-models/#characteristic","title":"characteristic","text":"<p>punctual, lineal, areal, surficial   </p>"},{"location":"data-models/#geographic-frameworks","title":"geographic frameworks","text":""},{"location":"data-models/#coordinate-reference-system-crs","title":"coordinate reference system (CRS)","text":""},{"location":"data-models/#vector","title":"vector","text":""},{"location":"data-models/#geometry","title":"geometry","text":""},{"location":"data-models/#attribute","title":"attribute","text":""},{"location":"data-models/#feature","title":"feature","text":""},{"location":"data-models/#collection-table","title":"collection (table)","text":""},{"location":"data-models/#raster-image","title":"raster image","text":""},{"location":"data-models/#band","title":"band","text":""},{"location":"data-models/#image","title":"image","text":""},{"location":"data-models/#collection","title":"collection","text":""},{"location":"data-models/#image-collection","title":"image collection","text":""},{"location":"data-models/#temporal","title":"temporal","text":""},{"location":"data-operations/","title":"data operations","text":""},{"location":"data-operations/#map-algebra","title":"map algebra","text":""},{"location":"data-operations/#local-operations","title":"local operations","text":""},{"location":"data-operations/#focal-operations","title":"focal operations","text":""},{"location":"data-operations/#zonal-operations","title":"zonal operations","text":""},{"location":"data-operations/#binary-spatial-relations","title":"binary spatial relations","text":"<p>These ask binary (true or false) questions about a spatial relationship between two geometry objects. They define criteria used to query (filter, select) geometry objects.           </p>"},{"location":"data-operations/#disjoint","title":"disjoint","text":""},{"location":"data-operations/#meet","title":"meet","text":""},{"location":"data-operations/#overlap","title":"overlap","text":""},{"location":"data-operations/#inside","title":"inside","text":""},{"location":"data-operations/#contains","title":"contains","text":""},{"location":"data-operations/#covers","title":"covers","text":""},{"location":"data-operations/#covered-by","title":"covered by","text":""},{"location":"data-operations/#equal","title":"equal","text":""},{"location":"data-operations/#vector-overlay-operations","title":"vector overlay operations","text":"<p>These compare two geometric zones on two layers and create a new output layer with geometries or features made from one or two parent geometries.  </p>"},{"location":"data-operations/#intersection","title":"intersection","text":"<p>and</p>"},{"location":"data-operations/#union","title":"union","text":"<p>or  </p>"},{"location":"data-operations/#clip","title":"clip","text":"<p>not  </p>"},{"location":"data-operations/#zonal","title":"zonal","text":""},{"location":"ee/","title":"earth engine methods","text":"<p>This is a collection of recurring tasks for cartographic modeling with the javascript code editor for Google Earth Engine. In many cases, the snippets below use data and tools that are shared via my public earth engine repo. Click here to add the repository to the \u201cReader\u201d section in your instance of Code Editor. This will allow you to see the underlying code.  </p>"},{"location":"ee/#load-modules","title":"Load modules","text":""},{"location":"ee/#data-module","title":"Data module","text":"<pre><code>// -------------------------------------------------------------\n//  LOAD DATA MODULE. \n// -------------------------------------------------------------\n\nvar data = require('users/jhowarth/public:modules/data.js');       print('DATA', data);\n</code></pre>"},{"location":"ee/#tasks-module","title":"Tasks module","text":"<pre><code>// -------------------------------------------------------------\n//  LOAD TASKS MODULE. \n// -------------------------------------------------------------\n\nvar t = require('users/jhowarth/public:modules/tasks.js');\n</code></pre>"},{"location":"ee/#layout-module","title":"Layout module","text":"<pre><code>// -------------------------------------------------------------\n//  LOAD LAYOUT MODULE. \n// -------------------------------------------------------------\n\nvar layout = require('users/jhowarth/public:modules/layout.js').layout;\nprint('LAYOUT', layout);\n</code></pre>"},{"location":"ee/#load-data","title":"Load data","text":""},{"location":"ee/#load-fc-from-address","title":"Load FC from address","text":"<pre><code>// -------------------------------------------------------------\n//  LOAD FEATURE COLLECTION FROM ADDRESS. \n\n//  Replace LAYER with a key from the data repo;\n//  or replace argument with EE address string. \n\n// -------------------------------------------------------------\n\nvar output = ee.FeatureCollection(data.LAYER.fc_address);\n</code></pre>"},{"location":"ee/#load-ic-from-address","title":"Load IC from address","text":"<pre><code>// -------------------------------------------------------------\n//  LOAD IMAGE COLLECTION FROM ADDRESS. \n\n//  Replace LAYER with a key from the data repo;\n//  or replace argument with EE address string.  \n// -------------------------------------------------------------\n\nvar output = ee.ImageCollection(data.LAYER.fc_address);\n</code></pre>"},{"location":"ee/#inspect-properties","title":"Inspect properties","text":""},{"location":"ee/#print-first-feature-in-fc","title":"Print first feature in FC","text":"<pre><code>// -------------------------------------------------------------\n//  PRINT FIRST FEATURE IN COLLECTION.  \n\n//  Replace 'LABEL' with appropriate header.  \n//  Replace fc with appropriate variable.\n// -------------------------------------------------------------\n\nprint(\n\"LABEL\",\nfc.first()\n)\n;\n</code></pre>"},{"location":"ee/#print-unique-values-in-fc","title":"Print unique values in FC","text":"<pre><code>// -------------------------------------------------------------\n//  PRINT UNIQUE VALUES OF FEATURE PROPERTY IN COLLECTION. \n\n//  Replace 'LABEL' with appropriate header.  \n//  Replace fc with appropriate variable.\n// -------------------------------------------------------------\n\nprint(\n\"LABEL\",\nfc.aggregate_array().distinct().sort()\n)\n;\n</code></pre>"},{"location":"ee/#filter-a-collection","title":"Filter a collection","text":""},{"location":"ee/#filter-collection-by-attribute","title":"Filter collection by attribute","text":"<pre><code>// -------------------------------------------------------------\n//  FILTER COLLECTION BY ATTRIBUTE. \n\n//  Input must be a collection.\n//  Output is a collection, where each object in collection satisfies criterion.\n\n//  Set CRITERION (see options in ee.Filter docs).\n//  Set \"property_name\".\n//  Set \"value\".\n// -------------------------------------------------------------\n\nvar output = input\n.filter(ee.Filter.CRITERION(\"property_name\", \"value\"))\n;\n</code></pre>"},{"location":"ee/#filter-collection-by-bounds","title":"Filter collection by bounds","text":"<pre><code>// -------------------------------------------------------------\n//  FILTER COLLECTION BY ATTRIBUTE. \n\n//  Input must be a feature collection.\n//  BOUNDS may be a point, line, or polygon geometry, feature, or feature collection.\n//  Output is a collection, where each object intersects.\n\n\n// -------------------------------------------------------------\n\nvar output = input\n.filterBounds(BOUNDS)\n;\n</code></pre>"},{"location":"ee/#measure-spatial-properties-in-a-collection","title":"Measure spatial properties in a collection","text":""},{"location":"ee/#area-of-features-acres-in-fc","title":"Area of features (acres) in FC","text":"<pre><code>// -------------------------------------------------------------\n//  CALCULATE AREA (ACRES) OF FEATURES IN COLLECTION. \n// -------------------------------------------------------------\n\n//  This CRS is good for Vermont. Replace if you work elsewhere.\n\nvar crs = \"EPSG 31245\";\n\n//  Input must be a feature collection.\n//  Output is a feature collection.\n//  Each output feature has new property 'acres' that holds the area of feature.\n//  Replace 'acres' with something else to define an alternative property name. \n//  Remember to following naming rules for properties.   \n\nvar output = input\n.map(t.howManyAcres(crs, 'acres'))\n;\n</code></pre>"},{"location":"ee/#area-of-features-sq-km-in-fc","title":"Area of features (sq km) in FC","text":"<pre><code>// -------------------------------------------------------------\n//  CALCULATE AREA (SQUARE KM) OF FEATURES IN COLLECTION. \n// -------------------------------------------------------------\n\n//  This CRS is good for Vermont. Replace if you work elsewhere.\n\nvar crs = \"EPSG 31245\";\n\n//  Input must be a feature collection.\n//  Output is a feature collection.\n//  Each output feature has new property 'sq_km' that holds the area of feature.\n//  Replace 'sq_km' with something else to define an alternative property name.  \n//  Remember to following naming rules for properties (no spaces).\n\nvar output = input\n.map(t.howManyAcres(crs, 'sq_km'))\n;\n</code></pre>"},{"location":"ee/#aggregate-features-in-a-collection","title":"Aggregate features in a collection","text":""},{"location":"ee/#dissolve-features-in-collection-by-property","title":"Dissolve features in collection by property","text":"<pre><code>// -------------------------------------------------------------\n//  DISSOLVE FEATURES IN COLLECTION BY PROPERTY. \n\n//  Input must be a feature collection.\n//  Replace 'PROPERTY' with the property name to dissolve features.  \n//  Output is a feature collection (with singlepart and multipart features),\n//  where each feature represents the region of a unique property value.  \n// -------------------------------------------------------------\n\n\nvar output = t.dissolveByProperty(input, 'PROPERTY')\n</code></pre>"},{"location":"ee/#naip-imagery","title":"NAIP imagery","text":""},{"location":"ee/#tag-naip-collection-with-date-and-number-of-bands","title":"Tag NAIP collection with date and number of bands","text":"<pre><code>// -------------------------------------------------------------\n//  Tag filtered collection with date and number of bands. \n\n//  Collection must be a NAIP image collection.\n// -------------------------------------------------------------\n\noutput = t.tagDateAndBands(collection)\n;\n</code></pre>"},{"location":"ee/#make-mosaic-image-from-image-collection","title":"Make mosaic image from image collection","text":"<pre><code>// -------------------------------------------------------------\n//  Make mosaic image from image collection\n// -------------------------------------------------------------\n\nvar output = t.makeMosaic(collection, year, region);\n</code></pre>"},{"location":"ee/#image-visualization","title":"Image visualization","text":""},{"location":"ee/#make-a-histogram-to-see-data-distribution","title":"Make a histogram to see data distribution","text":"<pre><code>// Make a histogram to see data distribution.  \n\nvar b = 0;\nvar i = naip.earliest.i;\nvar v = naip.earliest.nc;\n\nvar histogram = t.makeHistogram(\ni,                                  // Must be an image (not an image collection).\nv.bands[b],                         // Select one band at a time.\n3,                                  // Pixel resolution of image.\nv.min[b],                           // Minimum value of x-axis\nv.max[b]                            // Maximum value of x-axis.\n)\n;\n\n// Print, print, print...\n\nprint(\n\"HISTOGRAM\", histogram\n)\n;\n</code></pre>"},{"location":"planning-concepts/","title":"planning concepts","text":"<p>Applied geographers believe that people should have good reasons for locating things where they do and parallels the goals of planning professions.  </p> <p>This section lists general concepts from site planning and conservation planning domains that often inform applications of cartographic modeling.         </p>"},{"location":"planning-concepts/#site","title":"site","text":""},{"location":"planning-concepts/#as-system","title":"as system","text":""},{"location":"planning-concepts/#for-purpose","title":"for purpose","text":""},{"location":"planning-concepts/#behavior-settings","title":"behavior settings","text":""},{"location":"planning-concepts/#behavior-programs","title":"behavior programs","text":""},{"location":"planning-concepts/#levels","title":"levels","text":""},{"location":"planning-concepts/#landscape","title":"landscape","text":""},{"location":"planning-concepts/#community","title":"community","text":""},{"location":"planning-concepts/#habitat","title":"habitat","text":""},{"location":"planning-concepts/#species","title":"species","text":""},{"location":"planning-concepts/#conditions","title":"conditions","text":""},{"location":"planning-concepts/#diversity","title":"diversity","text":""},{"location":"planning-concepts/#fragmentation","title":"fragmentation","text":""},{"location":"planning-concepts/#connectivity","title":"connectivity","text":""},{"location":"planning-concepts/#representative","title":"representative","text":""},{"location":"planning-concepts/#rarity","title":"rarity","text":""},{"location":"spatial-concepts/","title":"spatial concepts","text":"<p>Geographers aim to understand why things are located where they are. These questions build on the primitive concepts of a location with one or more conditions (also called values, attributes, or properties).  </p>"},{"location":"spatial-concepts/#analytical-skills","title":"analytical skills","text":"<p>Gersmehl (2005: 97-111) </p>"},{"location":"spatial-concepts/#location","title":"location","text":"<p>Where is it?   </p>"},{"location":"spatial-concepts/#conditions","title":"conditions","text":"<p>What is there? </p>"},{"location":"spatial-concepts/#connections","title":"connections","text":"<p>How are conditions at one location linked with conditions at other places?  </p>"},{"location":"spatial-concepts/#comparison","title":"comparison","text":"<p>How are conditions at one location similar or different to conditions at other places?    </p>"},{"location":"spatial-concepts/#aura","title":"aura","text":"<p>How do conditions at one location influence nearby places?    </p>"},{"location":"spatial-concepts/#region","title":"region","text":"<p>What places are similar to each other and can be grouped together?_  </p>"},{"location":"spatial-concepts/#hierarchy","title":"hierarchy","text":"<p>Where does this place fit in a hierarchy of places?  </p>"},{"location":"spatial-concepts/#transition","title":"transition","text":"<p>How do conditions change between two places?  </p>"},{"location":"spatial-concepts/#analog","title":"analog","text":"<p>What distant places have similar conditions to this place?      </p>"},{"location":"spatial-concepts/#patterns","title":"patterns","text":"<p>How are conditions arranged in imbalances, clusters, strings, rings, or other non-random ways?  </p>"},{"location":"spatial-concepts/#associations","title":"associations","text":"<p>What conditions tend to occur together?  </p>"},{"location":"spatial-concepts/#exceptions","title":"exceptions","text":"<p>Where are places that do not fit the rule?   </p>"}]}